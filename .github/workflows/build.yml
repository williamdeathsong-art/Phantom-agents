name: Build Android APKs from Zip

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # 1. Pull repo
    - name: Checkout repository
      uses: actions/checkout@v3

    # 2. Find the zip no matter where it is (root or workflows folder)
    - name: Locate and unzip project
      run: |
        ZIP_FILE=$(find . -name "phantom-final-definitive2.zip" | head -n 1)
        if [ -z "$ZIP_FILE" ]; then
          echo "Zip file not found!" && exit 1
        fi
        unzip "$ZIP_FILE" -d project

    # 3. Install Java
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    # 4. Allow gradlew to run
    - name: Grant execute permission for gradlew
      run: chmod +x project/gradlew

    # 5. Build Debug APK
    - name: Build Debug APK
      working-directory: project
      run: ./gradlew assembleDebug

    # 6. Build Release APK (unsigned)
    - name: Build Release APK
      working-directory: project
      run: ./gradlew assembleRelease

    # 7. Create test keystore
    - name: Generate test keystore
      run: |
        keytool -genkeypair -v -keystore testkey.jks -storepass password \
          -keypass password -alias testkey -keyalg RSA -keysize 2048 -validity 10000 \
          -dname "CN=Test, OU=Test, O=Test, L=Test, S=Test, C=US"

    # 8. Sign Release APK
    - name: Sign Release APK
      run: |
        mkdir signed
        RELEASE_APK=$(ls project/app/build/outputs/apk/release/*.apk | head -n 1)
        jarsigner -verbose -sigalg SHA256withRSA -digestalg SHA-256 \
          -keystore testkey.jks -storepass password -keypass password \
          "$RELEASE_APK" testkey
        cp "$RELEASE_APK" signed/app-release-signed.apk

    # 9. Collect outputs
    - name: Collect APKs
      run: |
        mkdir output
        cp project/app/build/outputs/apk/debug/*.apk output/app-debug.apk
        cp signed/app-release-signed.apk output/
        cd output
        zip all-apks.zip *.apk

    # 10. Upload
    - name: Upload All APKs
      uses: actions/upload-artifact@v3
      with:
        name: built-apks
        path: output/all-apks.zip
